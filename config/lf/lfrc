set shell sh
set scrolloff 5
set ratios 1:2:2
set ifs "\n"


# Mappings

map <pgdn> half-down
map <pgup> half-up

map <backspace2> set hidden!
map <insert> push $touch<space>
map <f-7> push $mkdir<space>
map R reload

map n
map nf push $touch<space>
map nd push $mkdir<space>

map s
map sa :{{set sortby atime; set info atime; set reverse; top; }}
map st :{{set sortby time; set info time; set reverse; top; }}
map sc :{{set sortby ctime; set info ctime; set reverse; top; }}
map sn :{{set sortby natural; set info; set noreverse; top; }}

map +x ${{
chmod +x $fx
lf -remote "send $id reload"
}}
map +r ${{
chmod +r $fx
lf -remote "send $id reload"
}}
map +w ${{
chmod +w $fx
lf -remote "send $id reload"
}}

map -x ${{
chmod -x $fx
lf -remote "send $id reload"
}}
map -r ${{
chmod -r $fx
lf -remote "send $id reload"
}}
map -w ${{
chmod -w $fx
lf -remote "send $id reload"
}}

cmd yankfile ${{
    xclip -selection clipboard -t $(file --mime-type $f | sed -e 's/.*: //') -i $fx
}}
cmd yankpath ${{
    echo -n $fx | xclip -selection clipboard 
}}
map y
map yf yankfile
map yp yankpath
map yy copy

cmd trash %trash-put $fx
map D delete

cmd open-with ${{
    printf '\e[?1049h'
    mimeopen --ask $fx
    printf '\e[?1049l'
}}
map <enter> open

cmd fzf_jump ${{
    lf -remote "send $id set hidden"
    res="$(find . -maxdepth 2 -printf "%d %p\n" | sort -n | perl -pe 's/^\d+\s//;' | fzf --cycle --bind=tab:down,btab:up --reverse --exact --header='Jump to location' --no-sort --color=dark,fg:#cbe3e7,bg:#1b182c,hl:#c991e1,fg+:#aaffe4,bg+:#565575,hl+:#c991e1,gutter:#1b182c,pointer:#aaffe4,prompt:#c991e1,info:#ffe9aa,header:#cbe3e7,spinner:#63f2f1  | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}} 

map / fzf_jump

cmd extract ${{
    set -f
    atool -x $f
}}

cmd on-cd &{{
    # '&' commands run silently in background (which is what we want here),
    # but are not connected to stdout.
    # To make sure our escape sequence still reaches stdout we pipe it to /dev/tty
    printf "\033]0; $(pwd | sed "s|$HOME|~|")\007" > /dev/tty
}}
on-cd

cmd follow_link %{{
  lf -remote "send ${id} select '$(readlink $f)'"
}}
map gl follow_link
map g/ cd /


# vim: ft=go
